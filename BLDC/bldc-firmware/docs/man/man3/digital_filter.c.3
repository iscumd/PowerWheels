.TH "digital_filter.c" 3 "Wed Sep 16 2015" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
digital_filter.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'digital_filter\&.h'\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBfilter_fft\fP (int dir, int m, float *real, float *imag)"
.br
.ti -1c
.RI "void \fBfilter_dft\fP (int dir, int len, float *real, float *imag)"
.br
.ti -1c
.RI "void \fBfilter_fftshift\fP (float *data, int len)"
.br
.ti -1c
.RI "void \fBfilter_hamming\fP (float *data, int len)"
.br
.ti -1c
.RI "void \fBfilter_zeroPad\fP (float *data, float *result, int dataLen, int resultLen)"
.br
.ti -1c
.RI "void \fBfilter_create_fir_lowpass\fP (float *filter_vector, float f_break, int bits, int use_hamming)"
.br
.ti -1c
.RI "float \fBfilter_run_fir_iteration\fP (float *vector, float *filter, int bits, uint32_t offset)"
.br
.ti -1c
.RI "void \fBfilter_add_sample\fP (float *buffer, float sample, int bits, uint32_t *offset)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void filter_add_sample (float * buffer, float sample, int bits, uint32_t * offset)"
Add sample to buffer 
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP The buffer to add the sample to 
.br
\fIsample\fP The sample to add 
.br
\fIbits\fP The length of the buffer in bits 
.br
\fIoffset\fP Pointer to the current offset in the buffer\&. Will be updated in this call and wrapped at the length of this buffer\&. 
.RE
.PP

.SS "void filter_create_fir_lowpass (float * filter_vector, float f_break, int bits, int use_hamming)"

.SS "void filter_dft (int dir, int len, float * real, float * imag)"

.SS "void filter_fft (int dir, int m, float * real, float * imag)"

.SS "void filter_fftshift (float * data, int len)"

.SS "void filter_hamming (float * data, int len)"

.SS "float filter_run_fir_iteration (float * vector, float * filter, int bits, uint32_t offset)"

.SS "void filter_zeroPad (float * data, float * result, int dataLen, int resultLen)"

.SH "Author"
.PP 
Generated automatically by Doxygen from the source code\&.
