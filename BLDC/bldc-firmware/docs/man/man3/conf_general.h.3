.TH "conf_general.h" 3 "Wed Sep 16 2015" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
conf_general.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'datatypes\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBFW_VERSION_MAJOR\fP   1"
.br
.ti -1c
.RI "#define \fBFW_VERSION_MINOR\fP   12"
.br
.ti -1c
.RI "#define \fBAUTO_PRINT_FAULTS\fP   0"
.br
.ti -1c
.RI "#define \fBSYSTEM_CORE_CLOCK\fP   168000000"
.br
.ti -1c
.RI "#define \fBHW_VERSION_46\fP"
.br
.ti -1c
.RI "#define \fBMCCONF_OUTRUNNER2\fP"
.br
.ti -1c
.RI "#define \fBENCODER_ENABLE\fP   0"
.br
.ti -1c
.RI "#define \fBENCODER_COUNTS\fP   14400"
.br
.ti -1c
.RI "#define \fBCAN_ENABLE\fP   1"
.br
.ti -1c
.RI "#define \fBLED_EXT_BATT_LOW\fP   28\&.0"
.br
.ti -1c
.RI "#define \fBLED_EXT_BATT_HIGH\fP   33\&.0"
.br
.ti -1c
.RI "#define \fBWS2811_ENABLE\fP   0"
.br
.ti -1c
.RI "#define \fBWS2811_CLK_HZ\fP   800000"
.br
.ti -1c
.RI "#define \fBWS2811_LED_NUM\fP   14"
.br
.ti -1c
.RI "#define \fBWS2811_USE_CH2\fP   1"
.br
.ti -1c
.RI "#define \fBSERVO_OUT_ENABLE\fP   0"
.br
.ti -1c
.RI "#define \fBSERVO_OUT_SIMPLE\fP   1"
.br
.ti -1c
.RI "#define \fBSERVO_OUT_PULSE_MIN_US\fP   1000"
.br
.ti -1c
.RI "#define \fBSERVO_OUT_PULSE_MAX_US\fP   2000"
.br
.ti -1c
.RI "#define \fBSERVO_OUT_RATE_HZ\fP   50"
.br
.ti -1c
.RI "#define \fBVDIV_CORR\fP   ((\fBVIN_R2\fP / (\fBVIN_R2\fP + \fBVIN_R1\fP)) / (2\&.2 / (2\&.2 + 33\&.0)))"
.br
.ti -1c
.RI "#define \fBV_REG\fP   3\&.3"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBconf_general_init\fP (void)"
.br
.ti -1c
.RI "void \fBconf_general_read_app_configuration\fP (\fBapp_configuration\fP *conf)"
.br
.ti -1c
.RI "bool \fBconf_general_store_app_configuration\fP (\fBapp_configuration\fP *conf)"
.br
.ti -1c
.RI "void \fBconf_general_read_mc_configuration\fP (\fBmc_configuration\fP *conf)"
.br
.ti -1c
.RI "bool \fBconf_general_store_mc_configuration\fP (\fBmc_configuration\fP *conf)"
.br
.ti -1c
.RI "bool \fBconf_general_detect_motor_param\fP (float current, float min_rpm, float low_duty, float *int_limit, float *bemf_coupling_k, int8_t *hall_table, int *hall_res)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define AUTO_PRINT_FAULTS   0"

.SS "#define CAN_ENABLE   1"

.SS "#define ENCODER_COUNTS   14400"

.SS "#define ENCODER_ENABLE   0"

.SS "#define FW_VERSION_MAJOR   1"

.SS "#define FW_VERSION_MINOR   12"

.SS "#define HW_VERSION_46"

.SS "#define LED_EXT_BATT_HIGH   33\&.0"

.SS "#define LED_EXT_BATT_LOW   28\&.0"

.SS "#define MCCONF_OUTRUNNER2"

.SS "#define SERVO_OUT_ENABLE   0"

.SS "#define SERVO_OUT_PULSE_MAX_US   2000"

.SS "#define SERVO_OUT_PULSE_MIN_US   1000"

.SS "#define SERVO_OUT_RATE_HZ   50"

.SS "#define SERVO_OUT_SIMPLE   1"

.SS "#define SYSTEM_CORE_CLOCK   168000000"

.SS "#define V_REG   3\&.3"

.SS "#define VDIV_CORR   ((\fBVIN_R2\fP / (\fBVIN_R2\fP + \fBVIN_R1\fP)) / (2\&.2 / (2\&.2 + 33\&.0)))"

.SS "#define WS2811_CLK_HZ   800000"

.SS "#define WS2811_ENABLE   0"

.SS "#define WS2811_LED_NUM   14"

.SS "#define WS2811_USE_CH2   1"

.SH "Function Documentation"
.PP 
.SS "bool conf_general_detect_motor_param (float current, float min_rpm, float low_duty, float * int_limit, float * bemf_coupling_k, int8_t * hall_table, int * hall_res)"

.SS "void conf_general_init (void)"

.SS "void conf_general_read_app_configuration (\fBapp_configuration\fP * conf)"
Read \fBapp_configuration\fP from EEPROM\&. If this fails, default values will be used\&.
.PP
\fBParameters:\fP
.RS 4
\fIconf\fP A pointer to a \fBapp_configuration\fP struct to write the read configuration to\&. 
.RE
.PP

.SS "void conf_general_read_mc_configuration (\fBmc_configuration\fP * conf)"
Read \fBmc_configuration\fP from EEPROM\&. If this fails, default values will be used\&.
.PP
\fBParameters:\fP
.RS 4
\fIconf\fP A pointer to a \fBmc_configuration\fP struct to write the read configuration to\&. 
.RE
.PP

.SS "bool conf_general_store_app_configuration (\fBapp_configuration\fP * conf)"
Write \fBapp_configuration\fP to EEPROM\&.
.PP
\fBParameters:\fP
.RS 4
\fIconf\fP A pointer to the configuration that should be stored\&. 
.RE
.PP

.SS "bool conf_general_store_mc_configuration (\fBmc_configuration\fP * conf)"
Write \fBmc_configuration\fP to EEPROM\&.
.PP
\fBParameters:\fP
.RS 4
\fIconf\fP A pointer to the configuration that should be stored\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen from the source code\&.
