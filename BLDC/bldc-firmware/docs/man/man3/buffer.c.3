.TH "buffer.c" 3 "Wed Sep 16 2015" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
buffer.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'buffer\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBbuffer_append_int16\fP (uint8_t *buffer, int16_t number, int32_t *index)"
.br
.ti -1c
.RI "void \fBbuffer_append_uint16\fP (uint8_t *buffer, uint16_t number, int32_t *index)"
.br
.ti -1c
.RI "void \fBbuffer_append_int32\fP (uint8_t *buffer, int32_t number, int32_t *index)"
.br
.ti -1c
.RI "void \fBbuffer_append_uint32\fP (uint8_t *buffer, uint32_t number, int32_t *index)"
.br
.ti -1c
.RI "void \fBbuffer_append_float16\fP (uint8_t *buffer, float number, float scale, int32_t *index)"
.br
.ti -1c
.RI "void \fBbuffer_append_float32\fP (uint8_t *buffer, float number, float scale, int32_t *index)"
.br
.ti -1c
.RI "int16_t \fBbuffer_get_int16\fP (const uint8_t *buffer, int32_t *index)"
.br
.ti -1c
.RI "uint16_t \fBbuffer_get_uint16\fP (const uint8_t *buffer, int32_t *index)"
.br
.ti -1c
.RI "int32_t \fBbuffer_get_int32\fP (const uint8_t *buffer, int32_t *index)"
.br
.ti -1c
.RI "uint32_t \fBbuffer_get_uint32\fP (const uint8_t *buffer, int32_t *index)"
.br
.ti -1c
.RI "float \fBbuffer_get_float16\fP (const uint8_t *buffer, float scale, int32_t *index)"
.br
.ti -1c
.RI "float \fBbuffer_get_float32\fP (const uint8_t *buffer, float scale, int32_t *index)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void buffer_append_float16 (uint8_t * buffer, float number, float scale, int32_t * index)"

.SS "void buffer_append_float32 (uint8_t * buffer, float number, float scale, int32_t * index)"

.SS "void buffer_append_int16 (uint8_t * buffer, int16_t number, int32_t * index)"

.SS "void buffer_append_int32 (uint8_t * buffer, int32_t number, int32_t * index)"

.SS "void buffer_append_uint16 (uint8_t * buffer, uint16_t number, int32_t * index)"

.SS "void buffer_append_uint32 (uint8_t * buffer, uint32_t number, int32_t * index)"

.SS "float buffer_get_float16 (const uint8_t * buffer, float scale, int32_t * index)"

.SS "float buffer_get_float32 (const uint8_t * buffer, float scale, int32_t * index)"

.SS "int16_t buffer_get_int16 (const uint8_t * buffer, int32_t * index)"

.SS "int32_t buffer_get_int32 (const uint8_t * buffer, int32_t * index)"

.SS "uint16_t buffer_get_uint16 (const uint8_t * buffer, int32_t * index)"

.SS "uint32_t buffer_get_uint32 (const uint8_t * buffer, int32_t * index)"

.SH "Author"
.PP 
Generated automatically by Doxygen from the source code\&.
