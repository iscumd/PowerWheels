.TH "HAL_CONF" 3 "Wed Sep 16 2015" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HAL_CONF \- HAL_CONF
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBHAL_USE_TM\fP   FALSE"
.br
.RI "\fIEnables the TM subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_PAL\fP   TRUE"
.br
.RI "\fIEnables the PAL subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_ADC\fP   FALSE"
.br
.RI "\fIEnables the ADC subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_CAN\fP   TRUE"
.br
.RI "\fIEnables the CAN subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_EXT\fP   FALSE"
.br
.RI "\fIEnables the EXT subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_GPT\fP   FALSE"
.br
.RI "\fIEnables the GPT subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_I2C\fP   TRUE"
.br
.RI "\fIEnables the I2C subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_ICU\fP   TRUE"
.br
.RI "\fIEnables the ICU subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_MAC\fP   FALSE"
.br
.RI "\fIEnables the MAC subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_MMC_SPI\fP   FALSE"
.br
.RI "\fIEnables the MMC_SPI subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_PWM\fP   FALSE"
.br
.RI "\fIEnables the PWM subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_RTC\fP   FALSE"
.br
.RI "\fIEnables the RTC subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_SDC\fP   FALSE"
.br
.RI "\fIEnables the SDC subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_SERIAL\fP   FALSE"
.br
.RI "\fIEnables the SERIAL subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_SERIAL_USB\fP   TRUE"
.br
.RI "\fIEnables the SERIAL over USB subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_SPI\fP   FALSE"
.br
.RI "\fIEnables the SPI subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_UART\fP   TRUE"
.br
.RI "\fIEnables the UART subsystem\&. \fP"
.ti -1c
.RI "#define \fBHAL_USE_USB\fP   TRUE"
.br
.RI "\fIEnables the USB subsystem\&. \fP"
.ti -1c
.RI "#define \fBADC_USE_WAIT\fP   TRUE"
.br
.RI "\fIEnables synchronous APIs\&. \fP"
.ti -1c
.RI "#define \fBADC_USE_MUTUAL_EXCLUSION\fP   TRUE"
.br
.RI "\fIEnables the \fCadcAcquireBus()\fP and \fCadcReleaseBus()\fP APIs\&. \fP"
.ti -1c
.RI "#define \fBCAN_USE_SLEEP_MODE\fP   TRUE"
.br
.RI "\fISleep mode related APIs inclusion switch\&. \fP"
.ti -1c
.RI "#define \fBI2C_USE_MUTUAL_EXCLUSION\fP   TRUE"
.br
.RI "\fIEnables the mutual exclusion APIs on the I2C bus\&. \fP"
.ti -1c
.RI "#define \fBMAC_USE_EVENTS\fP   TRUE"
.br
.RI "\fIEnables an event sources for incoming packets\&. \fP"
.ti -1c
.RI "#define \fBMMC_SECTOR_SIZE\fP   512"
.br
.RI "\fIBlock size for MMC transfers\&. \fP"
.ti -1c
.RI "#define \fBMMC_NICE_WAITING\fP   TRUE"
.br
.RI "\fIDelays insertions\&. \fP"
.ti -1c
.RI "#define \fBMMC_POLLING_INTERVAL\fP   10"
.br
.RI "\fINumber of positive insertion queries before generating the insertion event\&. \fP"
.ti -1c
.RI "#define \fBMMC_POLLING_DELAY\fP   10"
.br
.RI "\fIInterval, in milliseconds, between insertion queries\&. \fP"
.ti -1c
.RI "#define \fBMMC_USE_SPI_POLLING\fP   TRUE"
.br
.RI "\fIUses the SPI polled API for small data transfers\&. \fP"
.ti -1c
.RI "#define \fBSDC_INIT_RETRY\fP   100"
.br
.RI "\fINumber of initialization attempts before rejecting the card\&. \fP"
.ti -1c
.RI "#define \fBSDC_MMC_SUPPORT\fP   FALSE"
.br
.RI "\fIInclude support for MMC cards\&. \fP"
.ti -1c
.RI "#define \fBSDC_NICE_WAITING\fP   TRUE"
.br
.RI "\fIDelays insertions\&. \fP"
.ti -1c
.RI "#define \fBSERIAL_DEFAULT_BITRATE\fP   38400"
.br
.RI "\fIDefault bit rate\&. \fP"
.ti -1c
.RI "#define \fBSERIAL_BUFFERS_SIZE\fP   16"
.br
.RI "\fISerial buffers size\&. \fP"
.ti -1c
.RI "#define \fBSPI_USE_WAIT\fP   TRUE"
.br
.RI "\fIEnables synchronous APIs\&. \fP"
.ti -1c
.RI "#define \fBSPI_USE_MUTUAL_EXCLUSION\fP   TRUE"
.br
.RI "\fIEnables the \fCspiAcquireBus()\fP and \fCspiReleaseBus()\fP APIs\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define ADC_USE_MUTUAL_EXCLUSION   TRUE"

.PP
Enables the \fCadcAcquireBus()\fP and \fCadcReleaseBus()\fP APIs\&. 
.PP
\fBNote:\fP
.RS 4
Disabling this option saves both code and data space\&. 
.RE
.PP

.SS "#define ADC_USE_WAIT   TRUE"

.PP
Enables synchronous APIs\&. 
.PP
\fBNote:\fP
.RS 4
Disabling this option saves both code and data space\&. 
.RE
.PP

.SS "#define CAN_USE_SLEEP_MODE   TRUE"

.PP
Sleep mode related APIs inclusion switch\&. 
.SS "#define HAL_USE_ADC   FALSE"

.PP
Enables the ADC subsystem\&. 
.SS "#define HAL_USE_CAN   TRUE"

.PP
Enables the CAN subsystem\&. 
.SS "#define HAL_USE_EXT   FALSE"

.PP
Enables the EXT subsystem\&. 
.SS "#define HAL_USE_GPT   FALSE"

.PP
Enables the GPT subsystem\&. 
.SS "#define HAL_USE_I2C   TRUE"

.PP
Enables the I2C subsystem\&. 
.SS "#define HAL_USE_ICU   TRUE"

.PP
Enables the ICU subsystem\&. 
.SS "#define HAL_USE_MAC   FALSE"

.PP
Enables the MAC subsystem\&. 
.SS "#define HAL_USE_MMC_SPI   FALSE"

.PP
Enables the MMC_SPI subsystem\&. 
.SS "#define HAL_USE_PAL   TRUE"

.PP
Enables the PAL subsystem\&. 
.SS "#define HAL_USE_PWM   FALSE"

.PP
Enables the PWM subsystem\&. 
.SS "#define HAL_USE_RTC   FALSE"

.PP
Enables the RTC subsystem\&. 
.SS "#define HAL_USE_SDC   FALSE"

.PP
Enables the SDC subsystem\&. 
.SS "#define HAL_USE_SERIAL   FALSE"

.PP
Enables the SERIAL subsystem\&. 
.SS "#define HAL_USE_SERIAL_USB   TRUE"

.PP
Enables the SERIAL over USB subsystem\&. 
.SS "#define HAL_USE_SPI   FALSE"

.PP
Enables the SPI subsystem\&. 
.SS "#define HAL_USE_TM   FALSE"

.PP
Enables the TM subsystem\&. 
.SS "#define HAL_USE_UART   TRUE"

.PP
Enables the UART subsystem\&. 
.SS "#define HAL_USE_USB   TRUE"

.PP
Enables the USB subsystem\&. 
.SS "#define I2C_USE_MUTUAL_EXCLUSION   TRUE"

.PP
Enables the mutual exclusion APIs on the I2C bus\&. 
.SS "#define MAC_USE_EVENTS   TRUE"

.PP
Enables an event sources for incoming packets\&. 
.SS "#define MMC_NICE_WAITING   TRUE"

.PP
Delays insertions\&. If enabled this options inserts delays into the MMC waiting routines releasing some extra CPU time for the threads with lower priority, this may slow down the driver a bit however\&. This option is recommended also if the SPI driver does not use a DMA channel and heavily loads the CPU\&. 
.SS "#define MMC_POLLING_DELAY   10"

.PP
Interval, in milliseconds, between insertion queries\&. 
.SS "#define MMC_POLLING_INTERVAL   10"

.PP
Number of positive insertion queries before generating the insertion event\&. 
.SS "#define MMC_SECTOR_SIZE   512"

.PP
Block size for MMC transfers\&. 
.SS "#define MMC_USE_SPI_POLLING   TRUE"

.PP
Uses the SPI polled API for small data transfers\&. Polled transfers usually improve performance because it saves two context switches and interrupt servicing\&. Note that this option has no effect on large transfers which are always performed using DMAs/IRQs\&. 
.SS "#define SDC_INIT_RETRY   100"

.PP
Number of initialization attempts before rejecting the card\&. 
.PP
\fBNote:\fP
.RS 4
Attempts are performed at 10mS intervals\&. 
.RE
.PP

.SS "#define SDC_MMC_SUPPORT   FALSE"

.PP
Include support for MMC cards\&. 
.PP
\fBNote:\fP
.RS 4
MMC support is not yet implemented so this option must be kept at \fCFALSE\fP\&. 
.RE
.PP

.SS "#define SDC_NICE_WAITING   TRUE"

.PP
Delays insertions\&. If enabled this options inserts delays into the MMC waiting routines releasing some extra CPU time for the threads with lower priority, this may slow down the driver a bit however\&. 
.SS "#define SERIAL_BUFFERS_SIZE   16"

.PP
Serial buffers size\&. Configuration parameter, you can change the depth of the queue buffers depending on the requirements of your application\&. 
.PP
\fBNote:\fP
.RS 4
The default is 64 bytes for both the transmission and receive buffers\&. 
.RE
.PP

.SS "#define SERIAL_DEFAULT_BITRATE   38400"

.PP
Default bit rate\&. Configuration parameter, this is the baud rate selected for the default configuration\&. 
.SS "#define SPI_USE_MUTUAL_EXCLUSION   TRUE"

.PP
Enables the \fCspiAcquireBus()\fP and \fCspiReleaseBus()\fP APIs\&. 
.PP
\fBNote:\fP
.RS 4
Disabling this option saves both code and data space\&. 
.RE
.PP

.SS "#define SPI_USE_WAIT   TRUE"

.PP
Enables synchronous APIs\&. 
.PP
\fBNote:\fP
.RS 4
Disabling this option saves both code and data space\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen from the source code\&.
